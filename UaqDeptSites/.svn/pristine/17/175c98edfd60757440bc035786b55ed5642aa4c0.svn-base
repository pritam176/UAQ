/**
 * 
 */
package com.uaq.service.mapper;

import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Component;

import com.uaq.logger.UAQLogger;
import com.uaq.payment.PaymentUtil;
import com.uaq.proxies.mobile_paymenthistory_bpel_client_ep.types.ProcessResponseListType;

import com.uaq.util.DateUtil;
import com.uaq.vo.PaymentHistoryVO;

/**
 * @author akhil
 * 
 */

@Component("paymentHistoryMapper")
public class PaymentHistoryMapper {
	
	protected static UAQLogger logger = new UAQLogger(PaymentHistoryMapper.class);

	public List<PaymentHistoryVO> mapPaymentReponseToVO(List<ProcessResponseListType> paymentHistoryList) {

		List<PaymentHistoryVO> paymentHistoryVOList = new ArrayList<PaymentHistoryVO>();
		logger.debug("No Of Record - processResponseListType.length");
		if (paymentHistoryList != null && paymentHistoryList.size() != 0) {
			logger.debug("No Of Record - processResponseListType.length");
			for (ProcessResponseListType response : paymentHistoryList) {
				PaymentHistoryVO paymentHistoryVO = new PaymentHistoryVO();
				paymentHistoryVO.setAction(response.getACTION());
				paymentHistoryVO.setAmount(String.valueOf(response.getAMOUNT()));
				paymentHistoryVO.setAmountWithFees(response.getAMOUNTWITHFEES());
				paymentHistoryVO.setAmountWithoutFees(response.getAMOUNTWITHOUTFEES());
				paymentHistoryVO.setCollectionCenterFees(response.getCOLLECTIONCENTREFEES());
				paymentHistoryVO.setConfirmationId(response.getCONFIRMATIONID());
				paymentHistoryVO.setCustomerId(response.getCUSTOMERID());
				paymentHistoryVO.setCustomerName(response.getCUSTOMERNAME());
				paymentHistoryVO.setDepartmentId(response.getDEPARTMENTID());
				paymentHistoryVO.seteDirhamFees(response.getEDIRHAMFEES());
				paymentHistoryVO.setFeeId(response.getFEEID());
				paymentHistoryVO.setOrginalTransactionID(response.getOrigTransactionID());
				paymentHistoryVO.setOther(response.getOTHER());
				paymentHistoryVO.setOwnerFees(response.getOWNERFEES());
				paymentHistoryVO.setPaymentInProgress(response.getPAYMENTINPROGRESS());
				paymentHistoryVO.setPurchaseId(response.getPURCHASEID());
				paymentHistoryVO.setPurchaseStatus(response.getPURCHASESTATUS());
				paymentHistoryVO.setRetrievalRefNumber(response.getRETRIEVALREFNUMBER());
				paymentHistoryVO.setServiceId(response.getSERVICEID());
				paymentHistoryVO.setStatus(response.getSTATUS());
				paymentHistoryVO.setStatusMessage(response.getSTATUSMESSAGE().replace("+", " "));
				paymentHistoryVO.setTransactionID(response.getTRANSACTIONID());
				paymentHistoryVO.setTranscationAmount(String.valueOf(PaymentUtil.convertAmountISOToDecimalFormat(response.getTRANSACTIONAMOUNT())));
				paymentHistoryVO.setTranscationDate(response.getTRANSACTIONDATE());
				paymentHistoryVOList.add(paymentHistoryVO);
			}
		}

		return paymentHistoryVOList;
	}

}
