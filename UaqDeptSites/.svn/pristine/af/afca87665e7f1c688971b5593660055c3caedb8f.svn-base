package com.uaq.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Service;

import com.uaq.common.PropertiesUtil;
import com.uaq.common.ServiceNameConstant;
import com.uaq.logger.UAQLogger;
import com.uaq.proxies.newwastecontainerreqbpel_client_ep.types.AttachmentListPayload;
import com.uaq.proxies.newwastecontainerreqbpel_client_ep.types.OutputPayload;
import com.uaq.soap.warpper.WebServiceWarpper;
import com.uaq.vo.UserDeatilVO;
import com.uaq.vo.WasteContainerRequestInputVO;
import com.uaq.vo.WasteContainerRequestOutputVO;

/**
 * Service class for Submit UAQ_PWS_WasteContainer
 * 
 * 
 * 
 * Jar Name-UAQProxy
 * WSDL-http://soa:8001/soa-infra/services/PWS_Department/UAQ_PWS_WasteContainer/newwastecontainerreqbpel_client_ep?WSDL
 * 
 * @author Pritam
 * 
 */

@Service
@Qualifier("pWSRequestService")
public class PWSRequestService {

	protected static UAQLogger logger = new UAQLogger(PWSRequestService.class);

	@Autowired
	private UCMCenterURLService uCMCenterURLService;

	public WasteContainerRequestOutputVO submitContainer(WasteContainerRequestInputVO input, UserDeatilVO userDeatilVO) {

		WasteContainerRequestOutputVO outputVO = new WasteContainerRequestOutputVO();
		com.uaq.proxies.newwastecontainerreqbpel_client_ep.types.Inputpayload payload = new com.uaq.proxies.newwastecontainerreqbpel_client_ep.types.Inputpayload();

		com.uaq.proxies.newwastecontainerreqbpel_client_ep.types.UserDetailsPayload userdDetails = new com.uaq.proxies.newwastecontainerreqbpel_client_ep.types.UserDetailsPayload();
		userdDetails.setUsername(userDeatilVO.getLoginUserName());
		userdDetails.setTypeOfUser(userDeatilVO.getTypeOfUser());
		userdDetails.setAccountid(userDeatilVO.getAccountid());
		userdDetails.setMobileNo(userDeatilVO.getMobileNo());
		userdDetails.setEmailID(userDeatilVO.getEmailID());
		userdDetails.setNationality(userDeatilVO.getNationality());
		userdDetails.setEmirate(String.valueOf(userDeatilVO.getEmiratesCode()));
		userdDetails.setFirstName(userDeatilVO.getFirstName());
		userdDetails.setEmiratesId(userDeatilVO.getEmiratesId());

		if (userDeatilVO.getTypeOfUser().equals("1")) {
			userdDetails.setApplicanttypeid(userDeatilVO.getApplicantTypeId());
		} else {
			userdDetails.setApplicanttypeid("0");
		}

		AttachmentListPayload fileList = new AttachmentListPayload();
		for (int i = 0; i < input.getFiles().size(); i++) {
			String filename = input.getFiles().get(i);
			logger.debug("File Name from Controller   |  " + filename);
			String did = filename.split("-")[0];
			String name = filename.split("-")[1];
			String ucmUrl = uCMCenterURLService.getWebCenterURLofFile(did);
			logger.debug("From WebCenter URL=" + ucmUrl);
			com.uaq.proxies.newwastecontainerreqbpel_client_ep.types.AttachmentRecPayload attachmentRecPayload = new com.uaq.proxies.newwastecontainerreqbpel_client_ep.types.AttachmentRecPayload();
			attachmentRecPayload.setContentid(did);
			attachmentRecPayload.setUrl(ucmUrl);
			attachmentRecPayload.setFileExpiryDate("01/01/1800");
			attachmentRecPayload.setFilename(name);
			attachmentRecPayload.setIsMandatory("1");
			attachmentRecPayload.setFileType("5");
			fileList.getAttachmentRec().add(attachmentRecPayload);

		}

		payload.setAddress1(input.getAddress());
		payload.setAddress2(input.getAddress());
		payload.setDeliveredAT(null);
		payload.setDeliveredBY(userDeatilVO.getAccountid());
		payload.setLanguageId(input.getLanguageId());
		payload.setLatitude(input.getLatitude());
		payload.setLongitude(input.getLongitude());
		payload.setPostbox(userDeatilVO.getPOBOX());
		payload.setReplacementReason(input.getReplacement());
		payload.setRequestID("");
		payload.setRequestNo("");
		payload.setServiceid(ServiceNameConstant.NEW_WASTE_CONTAINER);
		payload.setUserAccountid(userDeatilVO.getAccountid());
		payload.setServiceName(ServiceNameConstant.NEW_WASTE_CONTAINER_NAME);
		payload.setServiceType(input.getServiceType());
		payload.setSourceType("1");
		payload.setStatus("1");
		payload.setSubmittedByUserId(userDeatilVO.getUsername());
		payload.setUserComment("");
		payload.setWasteContainerReqId("1");
		payload.setWorkflowId("1");
		payload.setAttachmentList(fileList);
		payload.setUserDetails(userdDetails);
		// payload.setUserAccountid(userAccountid);
		payload.setWasteContainerReqId(userDeatilVO.getAccountid());

		OutputPayload output = null;

		try {
			output = new WebServiceWarpper().submitWasteContainor(payload, PropertiesUtil.getProperty("SOA_URL_PWS_SUBMIT"), PropertiesUtil.getProperty("SOA_USERNAME"),
					PropertiesUtil.getProperty("SOA_PASSWORD"));

			if (output != null) {
				logger.info(output.getStatusEN() + " |" + output.getStausFlag());
				outputVO.setMessage_EN(output.getStatusEN());
				outputVO.setMessage_AR(output.getStatusAR());
				outputVO.setStatus(output.getStausFlag());
				outputVO.setStatusId(output.getInputFields().getStatus());
				outputVO.setRequestNo(output.getInputFields().getRequestNo());
			} else {
				outputVO.setStatus("Failed");
				logger.info("new WebServiceWarpper().submitWasteContainor return NULL  | FAiled");
			}
		} catch (Exception e) {
			outputVO.setStatus("Failed");
			logger.error("WebService Input Error  |" + e.getMessage());
		}

		return outputVO;
	}

}
