/**
 * 
 */
package com.uaq.controller;

import static com.uaq.common.ApplicationConstants.*;
import static com.uaq.common.TilesViewConstant.*;
import static com.uaq.common.UAQURLConstant.MY_REQUEST_URL;

import java.util.Locale;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.uaq.common.PropertiesUtil;
import com.uaq.common.ViewPath;
import com.uaq.logger.UAQLogger;
import com.uaq.payment.InquiryPaymentResponse;

import com.uaq.util.StringUtil;
import com.uaq.vo.PageMetadataVO;

/**
 * @author TACME
 * 
 */
@Controller
public class ThankYouPageController extends BaseController {

	@Autowired
	private MessageSource messageSource;

	

	public static transient UAQLogger logger = new UAQLogger(ThankYouPageController.class);

	// /http://www.devuaq.ae/en/thankyou.html?pagelable=label.account.activation&messageId=label.activation.message&isMobile=false

	@RequestMapping(value = ViewPath.THANKYOU_PAGE, method = RequestMethod.GET)
	public String handleThankYouPage(HttpServletRequest request, ModelMap model) {
		super.handleRequest(request, model);

		String isMobile = request.getParameter(ISMOBILE);
		String messageId = request.getParameter("messageId");
		String languageCode = request.getParameter(PARAM_LANGUAGE_CODE);
		Locale locale = new Locale(languageCode);

		PageMetadataVO pageMetadataVO = new PageMetadataVO();
		pageMetadataVO.setPageTitle(messageSource.getMessage("label.eservice.thankyou.pagetitle", null, locale));
		pageMetadataVO.setPageDescription(messageSource.getMessage("label.eservice.thankyou.pagedescription", null, locale));
		pageMetadataVO.setPageKeywords(messageSource.getMessage("label.eservice.thankyou.pagekeyword", null, locale));

		logger.debug("isMobile=" + isMobile);

		if (!StringUtil.isEmpty(messageId)) {
			model.addAttribute("actmessage", messageSource.getMessage(messageId, null, locale));
		}
		String view = EMPTY_SPACE;

		if (!StringUtil.isEmpty(isMobile)) {
			if (isMobile.equalsIgnoreCase("true")) {
				view = MOBILE_THANKU_VIEW;
			} else {
				view = PORTAL_THANKU_VIEW;
			}
		}

		// model.addAttribute("ignore", "true");
		model.addAttribute(PAGE_META_DATA, pageMetadataVO);
		return view;
	}

	@RequestMapping(value = ViewPath.THANKYOU_PATMENT_PAGE, method = RequestMethod.GET)
	public String handleThankYouPaymentPage(HttpServletRequest request, HttpServletResponse response, ModelMap model) {
		logger.enter("thankyoupayment.html");
		super.handleRequest(request, model);
		String languageCode = request.getParameter(PARAM_LANGUAGE_CODE);
		Locale locale = new Locale(languageCode);

		String pageLabel = "purchase.payment.review";
		//boolean isMobile = portalUtil.isMobile(request, response);
		String view = request.getParameter("view");
		pageLabel = request.getParameter(PAGE_LABEL);
		InquiryPaymentResponse inquiryPaymentResponse = (InquiryPaymentResponse) request.getSession().getAttribute("inquiryPaymentResponse");
		/*if (!view.contains("error.page")) {
			if (inquiryPaymentResponse != null) {
				model.addAttribute("inquiryPaymentResponse", inquiryPaymentResponse);
			} else {
				view = (isMobile == false) ? "login.again" : "login.again.mobile";
			}
		}*/
		model.addAttribute("inquiryPaymentResponse", inquiryPaymentResponse);
		PageMetadataVO pageMetadataVO = new PageMetadataVO();
		pageMetadataVO.setPageTitle(messageSource.getMessage(pageLabel, null, locale));
		pageMetadataVO.setPageDescription(messageSource.getMessage(pageLabel, null, locale));
		pageMetadataVO.setPageKeywords(messageSource.getMessage(pageLabel, null, locale));

		model.addAttribute(PAGE_META_DATA, pageMetadataVO);
		model.addAttribute(PAGE_LABEL, pageLabel);
		model.addAttribute("message", request.getParameter("message"));
		model.addAttribute("servicemessage", request.getParameter("servicemessage"));
		model.addAttribute("status", request.getParameter("status"));
		model.addAttribute("generalFee",request.getParameter("generalFee"));
		model.addAttribute("ServiceName",request.getParameter("ServiceName"));
		model.addAttribute("returnUrl",PropertiesUtil.getProperty(UAQ_URL) + URL_SEPARATOR + languageCode + URL_SEPARATOR + MY_REQUEST_URL);
		logger.exit("view Render-" + view);

		return view;
	}

}
