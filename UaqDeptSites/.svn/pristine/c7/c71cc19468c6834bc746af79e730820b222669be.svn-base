package com.uaq.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

import com.uaq.common.PropertiesUtil;
import com.uaq.logger.UAQLogger;

@Repository("EGDServiceDAO")
public class EGDServiceDAO {

	private static transient UAQLogger logger = new UAQLogger(EGDServiceDAO.class);

	private static final String DB_DRIVER = PropertiesUtil.getProperty("soa.jdbc.driverClassName");
	private static final String DB_CONNECTION = PropertiesUtil.getProperty("soa.jdbc.url");
	private static final String DB_USER = PropertiesUtil.getProperty("soa.jdbc.username");
	private static final String DB_PASSWORD = PropertiesUtil.getProperty("soa.jdbc.password");

	private Connection con;

	// used to establish connection with SOA database
	private Connection getConnection() throws ClassNotFoundException, SQLException {

		try {
			Class.forName(DB_DRIVER);
		} catch (ClassNotFoundException e) {
			logger.error(e.getMessage());
		}

		try {
			con = DriverManager.getConnection(DB_CONNECTION, DB_USER, DB_PASSWORD);
		} catch (SQLException e) {
			logger.error(e.getMessage());
		}

		return con;
	}

	public boolean isExpired(String accountId) {
		logger.enter("getSupplierStatus");
		logger.debug("accountId | " + accountId);
		String SQL = "SELECT COUNT(*) FROM EGD_SUPP_DETAILS where ACCOUNT_ID = ? AND AC_STATUS = ?";
		logger.debug("SQL | " + SQL);
		boolean isExpired = false;
		PreparedStatement ps = null;
		try {
			con = getConnection();
			ps = con.prepareStatement(SQL);
			ps.setString(1, accountId);
			ps.setString(2, "2");// expired status

			ResultSet resultset = ps.executeQuery();
			int count = 0;
			while (resultset.next()) {

				count = resultset.getInt(1);
				if (count > 0) {
					isExpired = true;
				}
			}
		} catch (ClassNotFoundException | SQLException e) {

			logger.error(e.getMessage());
		} finally {

			if (ps != null) {
				try {
					ps.close();
				} catch (SQLException e) {
					logger.error(e.getMessage());
				}
			}
			if (con != null) {
				try {
					con.close();
				} catch (SQLException e) {
					logger.error(e.getMessage());
				}
			}
		}

		logger.exit("isExpired-" + isExpired);
		return isExpired;
	}

	public boolean isCreated(String accountId) {
		logger.enter("getSupplierStatus");
		logger.debug("accountId | " + accountId);
		String SQL = "SELECT COUNT(*) FROM EGD_SUPP_DETAILS where ACCOUNT_ID = ? AND AC_STATUS IN (0,1,2,3)";
		logger.debug("SQL | " + SQL);
		boolean isCreated = true;
		PreparedStatement ps = null;
		try {
			con = getConnection();
			ps = con.prepareStatement(SQL);
			ps.setString(1, accountId);

			ResultSet resultset = ps.executeQuery();
			int count = 0;
			while (resultset.next()) {

				count = resultset.getInt(1);
			}
			if (count == 0) {
				isCreated = false;
			}
		} catch (ClassNotFoundException | SQLException e) {

			logger.error(e.getMessage());
		} finally {

			if (ps != null) {
				try {
					ps.close();
				} catch (SQLException e) {
					logger.error(e.getMessage());
				}
			}
			if (con != null) {
				try {
					con.close();
				} catch (SQLException e) {
					logger.error(e.getMessage());
				}
			}
		}

		logger.exit("isCreated-" + isCreated);
		return isCreated;
	}

}
