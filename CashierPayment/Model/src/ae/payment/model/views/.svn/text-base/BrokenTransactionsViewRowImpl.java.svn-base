package ae.payment.model.views;

import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Feb 21 20:01:19 GST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BrokenTransactionsViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        PaymentId {
            public Object get(BrokenTransactionsViewRowImpl obj) {
                return obj.getPaymentId();
            }

            public void put(BrokenTransactionsViewRowImpl obj, Object value) {
                obj.setPaymentId((String)value);
            }
        }
        ,
        PaymentStatus {
            public Object get(BrokenTransactionsViewRowImpl obj) {
                return obj.getPaymentStatus();
            }

            public void put(BrokenTransactionsViewRowImpl obj, Object value) {
                obj.setPaymentStatus((String)value);
            }
        }
        ,
        ServiceCode {
            public Object get(BrokenTransactionsViewRowImpl obj) {
                return obj.getServiceCode();
            }

            public void put(BrokenTransactionsViewRowImpl obj, Object value) {
                obj.setServiceCode((String)value);
            }
        }
        ,
        Amount {
            public Object get(BrokenTransactionsViewRowImpl obj) {
                return obj.getAmount();
            }

            public void put(BrokenTransactionsViewRowImpl obj, Object value) {
                obj.setAmount((Number)value);
            }
        }
        ,
        PaymentInProgress {
            public Object get(BrokenTransactionsViewRowImpl obj) {
                return obj.getPaymentInProgress();
            }

            public void put(BrokenTransactionsViewRowImpl obj, Object value) {
                obj.setPaymentInProgress((String)value);
            }
        }
        ,
        ServiceId {
            public Object get(BrokenTransactionsViewRowImpl obj) {
                return obj.getServiceId();
            }

            public void put(BrokenTransactionsViewRowImpl obj, Object value) {
                obj.setServiceId((String)value);
            }
        }
        ,
        DepartmentId {
            public Object get(BrokenTransactionsViewRowImpl obj) {
                return obj.getDepartmentId();
            }

            public void put(BrokenTransactionsViewRowImpl obj, Object value) {
                obj.setDepartmentId((String)value);
            }
        }
        ,
        FeeId {
            public Object get(BrokenTransactionsViewRowImpl obj) {
                return obj.getFeeId();
            }

            public void put(BrokenTransactionsViewRowImpl obj, Object value) {
                obj.setFeeId((String)value);
            }
        }
        ,
        CustomerId {
            public Object get(BrokenTransactionsViewRowImpl obj) {
                return obj.getCustomerId();
            }

            public void put(BrokenTransactionsViewRowImpl obj, Object value) {
                obj.setCustomerId((String)value);
            }
        }
        ,
        CustomerName {
            public Object get(BrokenTransactionsViewRowImpl obj) {
                return obj.getCustomerName();
            }

            public void put(BrokenTransactionsViewRowImpl obj, Object value) {
                obj.setCustomerName((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(BrokenTransactionsViewRowImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(BrokenTransactionsViewRowImpl obj, Object value) {
                obj.setCreatedDate((Timestamp)value);
            }
        }
        ,
        LastModifiedDate {
            public Object get(BrokenTransactionsViewRowImpl obj) {
                return obj.getLastModifiedDate();
            }

            public void put(BrokenTransactionsViewRowImpl obj, Object value) {
                obj.setLastModifiedDate((Timestamp)value);
            }
        }
        ,
        TransactionId {
            public Object get(BrokenTransactionsViewRowImpl obj) {
                return obj.getTransactionId();
            }

            public void put(BrokenTransactionsViewRowImpl obj, Object value) {
                obj.setTransactionId((String)value);
            }
        }
        ,
        TransactionType {
            public Object get(BrokenTransactionsViewRowImpl obj) {
                return obj.getTransactionType();
            }

            public void put(BrokenTransactionsViewRowImpl obj, Object value) {
                obj.setTransactionType((String)value);
            }
        }
        ,
        TerminalNo {
            public Object get(BrokenTransactionsViewRowImpl obj) {
                return obj.getTerminalNo();
            }

            public void put(BrokenTransactionsViewRowImpl obj, Object value) {
                obj.setTerminalNo((String)value);
            }
        }
        ,
        MerchantId {
            public Object get(BrokenTransactionsViewRowImpl obj) {
                return obj.getMerchantId();
            }

            public void put(BrokenTransactionsViewRowImpl obj, Object value) {
                obj.setMerchantId((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(BrokenTransactionsViewRowImpl object);

        public abstract void put(BrokenTransactionsViewRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int PAYMENTID = AttributesEnum.PaymentId.index();
    public static final int PAYMENTSTATUS = AttributesEnum.PaymentStatus.index();
    public static final int SERVICECODE = AttributesEnum.ServiceCode.index();
    public static final int AMOUNT = AttributesEnum.Amount.index();
    public static final int PAYMENTINPROGRESS = AttributesEnum.PaymentInProgress.index();
    public static final int SERVICEID = AttributesEnum.ServiceId.index();
    public static final int DEPARTMENTID = AttributesEnum.DepartmentId.index();
    public static final int FEEID = AttributesEnum.FeeId.index();
    public static final int CUSTOMERID = AttributesEnum.CustomerId.index();
    public static final int CUSTOMERNAME = AttributesEnum.CustomerName.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTMODIFIEDDATE = AttributesEnum.LastModifiedDate.index();
    public static final int TRANSACTIONID = AttributesEnum.TransactionId.index();
    public static final int TRANSACTIONTYPE = AttributesEnum.TransactionType.index();
    public static final int TERMINALNO = AttributesEnum.TerminalNo.index();
    public static final int MERCHANTID = AttributesEnum.MerchantId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public BrokenTransactionsViewRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute PaymentId.
     * @return the PaymentId
     */
    public String getPaymentId() {
        return (String) getAttributeInternal(PAYMENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PaymentId.
     * @param value value to set the  PaymentId
     */
    public void setPaymentId(String value) {
        setAttributeInternal(PAYMENTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PaymentStatus.
     * @return the PaymentStatus
     */
    public String getPaymentStatus() {
        return (String) getAttributeInternal(PAYMENTSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PaymentStatus.
     * @param value value to set the  PaymentStatus
     */
    public void setPaymentStatus(String value) {
        setAttributeInternal(PAYMENTSTATUS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ServiceCode.
     * @return the ServiceCode
     */
    public String getServiceCode() {
        return (String) getAttributeInternal(SERVICECODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ServiceCode.
     * @param value value to set the  ServiceCode
     */
    public void setServiceCode(String value) {
        setAttributeInternal(SERVICECODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Amount.
     * @return the Amount
     */
    public Number getAmount() {
        return (Number) getAttributeInternal(AMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Amount.
     * @param value value to set the  Amount
     */
    public void setAmount(Number value) {
        setAttributeInternal(AMOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PaymentInProgress.
     * @return the PaymentInProgress
     */
    public String getPaymentInProgress() {
        return (String) getAttributeInternal(PAYMENTINPROGRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PaymentInProgress.
     * @param value value to set the  PaymentInProgress
     */
    public void setPaymentInProgress(String value) {
        setAttributeInternal(PAYMENTINPROGRESS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ServiceId.
     * @return the ServiceId
     */
    public String getServiceId() {
        return (String) getAttributeInternal(SERVICEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ServiceId.
     * @param value value to set the  ServiceId
     */
    public void setServiceId(String value) {
        setAttributeInternal(SERVICEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DepartmentId.
     * @return the DepartmentId
     */
    public String getDepartmentId() {
        return (String) getAttributeInternal(DEPARTMENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DepartmentId.
     * @param value value to set the  DepartmentId
     */
    public void setDepartmentId(String value) {
        setAttributeInternal(DEPARTMENTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FeeId.
     * @return the FeeId
     */
    public String getFeeId() {
        return (String) getAttributeInternal(FEEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FeeId.
     * @param value value to set the  FeeId
     */
    public void setFeeId(String value) {
        setAttributeInternal(FEEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CustomerId.
     * @return the CustomerId
     */
    public String getCustomerId() {
        return (String) getAttributeInternal(CUSTOMERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CustomerId.
     * @param value value to set the  CustomerId
     */
    public void setCustomerId(String value) {
        setAttributeInternal(CUSTOMERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CustomerName.
     * @return the CustomerName
     */
    public String getCustomerName() {
        return (String) getAttributeInternal(CUSTOMERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CustomerName.
     * @param value value to set the  CustomerName
     */
    public void setCustomerName(String value) {
        setAttributeInternal(CUSTOMERNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CreatedDate.
     * @return the CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CreatedDate.
     * @param value value to set the  CreatedDate
     */
    public void setCreatedDate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LastModifiedDate.
     * @return the LastModifiedDate
     */
    public Timestamp getLastModifiedDate() {
        return (Timestamp) getAttributeInternal(LASTMODIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LastModifiedDate.
     * @param value value to set the  LastModifiedDate
     */
    public void setLastModifiedDate(Timestamp value) {
        setAttributeInternal(LASTMODIFIEDDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransactionId.
     * @return the TransactionId
     */
    public String getTransactionId() {
        return (String) getAttributeInternal(TRANSACTIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransactionId.
     * @param value value to set the  TransactionId
     */
    public void setTransactionId(String value) {
        setAttributeInternal(TRANSACTIONID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransactionType.
     * @return the TransactionType
     */
    public String getTransactionType() {
        return (String) getAttributeInternal(TRANSACTIONTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransactionType.
     * @param value value to set the  TransactionType
     */
    public void setTransactionType(String value) {
        setAttributeInternal(TRANSACTIONTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TerminalNo.
     * @return the TerminalNo
     */
    public String getTerminalNo() {
        return (String) getAttributeInternal(TERMINALNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TerminalNo.
     * @param value value to set the  TerminalNo
     */
    public void setTerminalNo(String value) {
        setAttributeInternal(TERMINALNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MerchantId.
     * @return the MerchantId
     */
    public String getMerchantId() {
        return (String) getAttributeInternal(MERCHANTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MerchantId.
     * @param value value to set the  MerchantId
     */
    public void setMerchantId(String value) {
        setAttributeInternal(MERCHANTID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
